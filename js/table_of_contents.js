// Generated by CoffeeScript 1.6.3
(function() {
  var getAnchorName, getHeadlineNest, setupTableOfContents;

  $(document).ready(function() {
    setupTableOfContents(".toc", "h1,h2,h3,h4,h5,h6,h7,h8");
    setupTableOfContents(".sidebar", "h1,h2,h3", ["nav", "nav-stacked"]);
    return $('body').scrollspy({
      target: '.sidebar'
    });
  });

  setupTableOfContents = function(parent, selector, klasses) {
    var findParent, invalidateParents, roots;
    if (klasses == null) {
      klasses = [];
    }
    roots = [$(parent)];
    findParent = function(nest) {
      if (nest <= 0) {
        return roots[0];
      }
      if (roots[nest - 1] != null) {
        return roots[nest - 1];
      }
      return findParent(nest - 1);
    };
    invalidateParents = function(nest) {
      var i, _i, _ref, _results;
      _results = [];
      for (i = _i = _ref = nest + 1; _ref <= 8 ? _i <= 8 : _i >= 8; i = _ref <= 8 ? ++_i : --_i) {
        _results.push(roots[i] = null);
      }
      return _results;
    };
    return $(".content").find(selector).each(function() {
      var anchorName, element, klass, nest, ul, _i, _len;
      element = $(this);
      anchorName = getAnchorName(element.text());
      element.attr("id", anchorName);
      nest = getHeadlineNest(element);
      ul = roots[nest];
      if (ul == null) {
        ul = $("<ul>");
        for (_i = 0, _len = klasses.length; _i < _len; _i++) {
          klass = klasses[_i];
          ul.addClass(klass);
        }
        roots[nest] = ul;
        parent = findParent(nest);
        parent.append(ul);
      }
      ul.append($("<li>").append($("<a>").attr("href", "#" + anchorName).text(element.text())));
      return invalidateParents(nest);
    });
  };

  getHeadlineNest = function(element) {
    return parseInt(element.prop("tagName").substr(1));
  };

  getAnchorName = function(title) {
    return title.replace(/\s|\//g, "-");
  };

}).call(this);
